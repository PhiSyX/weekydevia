<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>weekydevia</title><link>https://github.com/PhiSyX/weekydevia</link><description>Resources of the week</description><lastBuildDate>2024-05-28 22:01:55.525202500 UTC</lastBuildDate><generator>weekydevia</generator><atom:link href="https://raw.githubusercontent.com/PhiSyX/weekydevia/main/release/feed.xml" rel="self" type="application/rss+xml"></atom:link><item><title>weekydevia: 2024.05.29 - 2024.06.602</title><link>https://github.com/PhiSyX/weekydevia/blob/main/release/2024.05.29 - 2024.06.602/README.md</link><description><![CDATA[Resources of the week (2024.05.29 - 2024.06.602)]]></description><author>Mike &apos;PhiSyX&apos; S.</author><guid></guid><pubDate>2024-05-28 22:01:55.525202500 UTC</pubDate><content:encoded><![CDATA[<h1>2024.05.27 - 2024.06.02</h1><p></p><p>Hello and welcome to another issue of weekydevia. This is a summary of the</p><p>resources, readings and news I've read and found interesting to share this week.</p><p></p><p>Links may be out of date, this is not a newsletter about new resources only.</p><p></p><p>-----</p><p></p><h2>Project</h2><p></p><p>ðŸ‡«ðŸ‡· <b>KÃ©saco : ADR ?</b>  </p><p>https://www.sfeir.dev/front/kesaco-adr/</p><p></p><p>> _"Peux-tu documenter cela ?" "Pense Ã  Ã©crire une documentation sur ce sujet."</p><p>> Ces exigences vous semblent-elles insurmontables ? DÃ©couvrez comment les ADRs</p><p>> peuvent vous aider Ã  surmonter ces dÃ©fis en fournissant un cadre structurÃ©</p><p>> pour documenter les dÃ©cisions architecturales._</p><p></p><h2>IDE / Editor</h2><p></p><p><b>The AI Code Editor</b>  </p><p>https://cursor.sh/</p><p></p><p>> _"Cursor is the AI-first code editor, built on frontier models, to make you an</p><p>> extraordinarily productive engineer."_</p><p></p><p><b>RustRover Is Released and Includes a Free Non-Commercial Option</b>  </p><p>https://blog.jetbrains.com/rust/2024/05/21/rustrover-is-released-and-includes-a-free-non-commercial-option/</p><p></p><p>> _"A powerhouse IDE for Rust developers"_</p><p></p><h2>VM</h2><p></p><p><b>VMware Workstation Pro: Now Available Free for Personal Use</b>  </p><p>https://blogs.vmware.com/workstation/2024/05/vmware-workstation-pro-now-available-free-for-personal-use.html</p><p></p><h2>WEB</h2><p></p><h2>CSS</h2><p></p><p><b>On compliance vs readability: Generating text colors with CSS</b>  </p><p>https://lea.verou.me/blog/2024/contrast-color/</p><p></p><p><b>matcha.css</b> - https://matcha.mizu.sh/</p><p></p><p>> _"matcha.css is a pure CSS library designed to style HTML elements similarly</p><p>> to a default browser stylesheet, eliminating the need for users to manually</p><p>> patch their documents."_</p><p></p><h2>JavaScript</h2><p></p><p><b>What's new in JavaScript Frameworks (May 2024)</b>  </p><p>https://developer.chrome.com/blog/frameworks-may-2024</p><p></p><p>> _"It can be difficult to keep up with everything that is going with JavaScript</p><p>> frameworks. This document provides brief highlights of recent happenings in</p><p>> the JavaScript frameworks ecosystem over the past year or so."_</p><p></p><p>ðŸ‡«ðŸ‡· <b>Dessiner des graphiques avec d3js</b>  </p><p>https://grafikart.fr/tutoriels/graph-d3js-2215</p><p></p><h2>Programming language</h2><p></p><p><b>"Boundaries of Language Design" with Andrew Kelley & Ginger Bill</b>  </p><p>https://youtu.be/3K8znjWN_Ig</p><p></p><h3>Go</h3><p></p><p><b>Cache-Aside using Decorator Design Pattern in Go</b>  </p><p>https://alesr.github.io/posts/cache-aside-using-decorator-design-pattern-in-go/</p><p></p><p><b>Building Dynamic Applications with Interpreted Go (Gno @ Golang Serbia Meetup)</b>  </p><p>https://youtu.be/tNM1DHOxIQ8</p><p></p><p><b>Blazingly Fast Shadow Stacks for Go</b>  </p><p>https://blog.felixge.de/blazingly-fast-shadow-stacks-for-go/</p><p></p><h3>Rust</h3><p></p><p><b>Conference RustNL 2024</b>  </p><p>https://2024.rustnl.org/live/  </p><p>All the presentations are interesting. However, here are the ones that I</p><p>particularly appreciated:</p><p></p><p>| Day | Speaker           | Title                                                                                                        |</p><p>| --- | ----------------- | ------------------------------------------------------------------------------------------------------------ |</p><p>| 1   | Rik Arends        | <a href="https://youtu.be/XLefuzE-ABU?t=1150">Visual application design for Rust</a>                                    |</p><p>| 1   | Alice Ryhl        | <a href="https://youtu.be/XLefuzE-ABU?t=8507">Arc in the Linux Kernel</a>                                               |</p><p>| 2   | Kevin Boos        | <a href="https://youtu.be/521NfGf7AR0?t=2940">Robius: Immersive and Seamless Multi-platform App Development in Rust</a> |</p><p>| 2   | Jonas Kruckenberg | <a href="https://youtu.be/521NfGf7AR0?t=9820">K23: A secure research OS running WASM</a>                                |</p><p>| 2   | Raph Levien       | <a href="https://youtu.be/521NfGf7AR0?t=19310">Xilem: let's build high performance Rust UI</a>                          |</p><p>| 2   | Niko Matsakis     | <a href="https://youtu.be/521NfGf7AR0?t=25024">Type theory for busy engineers</a>                                       |</p><p></p><p><b>This Week in Rust 548</b>  </p><p>https://this-week-in-rust.org/blog/2024/05/22/this-week-in-rust-548/</p><p></p><p><b>Build with Naz: Rust async, non-blocking, concurrent, parallel, event loops,
cancellation safety</b>  </p><p>https://developerlife.com/2024/05/19/effective-async-rust/</p><p></p><p><b>Thinking in Iterators</b>  </p><p>https://corrode.dev/blog/iterators/</p><p></p><p><b>Crux: Cross-platform app development in Rust</b>  </p><p>https://redbadger.github.io/crux/</p><p></p><p><b>The search for easier safe systems programming</b>  </p><p>https://www.sophiajt.com/search-for-easier-safe-systems-programming/</p><p></p><p>> _"Announcing June, a safe systems language that's a sister language to Rust.</p><p>> Focused on readability, learnability, and teachability."_</p><p></p><h3>WASM</h3><p></p><p><b>WebAssembly: A promising technology that is quietly being sabotaged</b>  </p><p>https://kerkour.com/webassembly-wasi-preview2</p><p></p><p><b>Why We Chose WebAssembly (Wasm) for Our Edge Runtime</b>  </p><p>https://thenewstack.io/why-we-chose-webassembly-wasm-for-our-edge-runtime/</p><p></p><h3>Zig</h3><p></p><p><b>YouTube</b>: @DeveloperVoices - <b>What's Zig got that C, Rust and Go don't have?
(with Loris Cro)</b>  </p><p>https://youtu.be/5_oqWE9otaE</p><p></p>]]></content:encoded></item></channel></rss>